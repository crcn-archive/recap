// Generated by CoffeeScript 1.6.3
var BookmarkletView, ent, mojo, pc, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

mojo = require("mojojs");

pc = require("paperclip");

ent = require("ent");

BookmarkletView = (function(_super) {
  __extends(BookmarkletView, _super);

  function BookmarkletView() {
    _ref = BookmarkletView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  BookmarkletView.prototype.paper = require("./bookmarklet.pc");

  /*
  */


  BookmarkletView.prototype.getBookmarklet = function() {
    var bm, fn;
    fn = function() {
      var script, scriptSrc, scripts, _i, _len, _results;
      if (window.recapped) {
        return;
      }
      scripts = [];
      if (typeof $ === void 0) {
        scripts.push("http://127.0.0.1:{{PORT}}/vendor/jquery-1.10.2.js");
      }
      scripts = ["http://localhost:{{PORT}}/index.min.js?" + Date.now()];
      _results = [];
      for (_i = 0, _len = scripts.length; _i < _len; _i++) {
        scriptSrc = scripts[_i];
        script = document.createElement("script");
        script.src = scriptSrc;
        _results.push(document.head.appendChild(script));
      }
      return _results;
    };
    bm = String(fn).replace(/\{\{PORT\}\}/g, this.httpPort);
    return "(" + (ent.encode(bm)) + ")();";
  };

  return BookmarkletView;

})(mojo.View);

module.exports = BookmarkletView;
