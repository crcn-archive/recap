// Generated by CoffeeScript 1.6.3
var DomListener, findXPath, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

findXPath = require("./findXPath");

DomListener = (function(_super) {
  __extends(DomListener, _super);

  function DomListener() {
    this._onEvent = __bind(this._onEvent, this);
    _ref = DomListener.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  /*
  */


  DomListener.prototype.start = function() {
    var event, events, _i, _len, _results;
    events = "click".split(" ");
    _results = [];
    for (_i = 0, _len = events.length; _i < _len; _i++) {
      event = events[_i];
      _results.push(document.body.addEventListener(event, this._onEvent, true));
    }
    return _results;
  };

  /*
  */


  DomListener.prototype.stop = function() {};

  /*
  */


  DomListener.prototype._onEvent = function(event) {
    return this.emit("event", {
      listener: "dom",
      type: event.type,
      data: this._data($(event.target))
    });
  };

  /*
   finds unique attributes
  */


  DomListener.prototype._data = function($element) {
    var attrs;
    attrs = {
      xpath: findXPath($element[0])
    };
    return attrs;
  };

  return DomListener;

})(require("../base"));

module.exports = function() {
  return new DomListener();
};
